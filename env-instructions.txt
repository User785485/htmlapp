üìã INSTRUCTIONS D√âTAILL√âES POUR LE D√âVELOPPEUR
üéØ PROBL√àME : Le projet actuel est en Vite, pas en Next.js
Soulful-connections-new utilise Vite qui ne supporte pas les API routes. Il faut cr√©er un nouveau projet Next.js.

üöÄ PLAN D'ACTION COMPLET - CR√âATION D'UN PROJET NEXT.JS
√âTAPE 1 : CR√âER LE NOUVEAU PROJET (5 min)
bash# Dans votre dossier de projets (PAS dans soulful-connections-new)
cd C:\Users\Moham\CascadeProjects

# Cr√©er le nouveau projet Next.js
npx create-next-app@latest my-muqabala-nextjs --typescript --app --no-tailwind --use-npm

# R√©pondre aux questions :
# - Would you like to use ESLint? ‚Üí Yes
# - Would you like to use src/ directory? ‚Üí No
# - Would you like to customize the default import alias? ‚Üí No

# Entrer dans le projet
cd my-muqabala-nextjs
√âTAPE 2 : INSTALLER LES D√âPENDANCES (2 min)
bash# Installer Supabase
npm install @supabase/supabase-js
√âTAPE 3 : CR√âER LA STRUCTURE DE DOSSIERS (1 min)
bash# Cr√©er la structure pour l'API
mkdir -p app/api/documents/[...path]
√âTAPE 4 : CR√âER LE FICHIER .env.local (2 min)
Cr√©ez le fichier .env.local √† la racine :
env# Configuration Supabase
NEXT_PUBLIC_SUPABASE_URL=https://prbidefjoqdrqwjeenxm.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InByYmlkZWZqb3FkcnF3amVlbnhtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgwMzY3NDEsImV4cCI6MjA2MzYxMjc0MX0.FaiiU8DTqnBVkNjG2L3wkE0MCsKnit_CNdGMmP0oRME

# Site configuration  
NODE_ENV=production
√âTAPE 5 : COPIER L'API DOCUMENTS (3 min)
Cr√©ez le fichier app/api/documents/[...path]/route.ts :
typescriptimport { NextRequest, NextResponse } from 'next/server';
import { createClient } from '@supabase/supabase-js';

// Configuration Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://prbidefjoqdrqwjeenxm.supabase.co';
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InByYmlkZWZqb3FkcnF3amVlbnhtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgwMzY3NDEsImV4cCI6MjA2MzYxMjc0MX0.FaiiU8DTqnBVkNjG2L3wkE0MCsKnit_CNdGMmP0oRME';
const bucketName = 'documents';

// Cr√©er le client Supabase
const supabase = createClient(supabaseUrl, supabaseAnonKey);

export async function GET(
  request: NextRequest,
  { params }: { params: { path: string[] } }
) {
  const pathSegments = params.path || [];
  const fullPath = pathSegments.join('/');
  
  console.log(`üìÑ API Documents: Requ√™te re√ßue pour: ${fullPath}`);
  
  try {
    const { data, error } = await supabase.storage
      .from(bucketName)
      .download(fullPath);
    
    if (error || !data) {
      console.error(`‚ùå Erreur:`, error);
      return new NextResponse(`Document not found: ${fullPath}`, { 
        status: 404,
        headers: { 'Content-Type': 'text/plain' }
      });
    }
    
    const htmlContent = await data.text();
    console.log(`‚úÖ Fichier servi: ${fullPath} (${htmlContent.length} octets)`);
    
    return new NextResponse(htmlContent, {
      status: 200,
      headers: {
        'Content-Type': 'text/html; charset=utf-8',
        'Cache-Control': 'public, max-age=3600',
        'Access-Control-Allow-Origin': '*'
      }
    });
    
  } catch (error) {
    console.error(`‚ùå Erreur serveur:`, error);
    return new NextResponse('Server error', { status: 500 });
  }
}

export const dynamic = 'force-dynamic';
√âTAPE 6 : CR√âER UNE PAGE D'ACCUEIL (2 min)
Modifiez app/page.tsx :
tsxexport default function Home() {
  return (
    <main style={{ padding: '2rem', textAlign: 'center' }}>
      <h1>My Muqabala - API Documents</h1>
      <p>Ce site sert les documents HTML depuis Supabase Storage.</p>
    </main>
  );
}
√âTAPE 7 : TESTER EN LOCAL (3 min)
bash# Lancer le serveur de d√©veloppement
npm run dev

# Tester dans le navigateur
# http://localhost:3000/api/documents/test
# Devrait afficher : "Document not found: test"
√âTAPE 8 : INITIALISER GIT ET POUSSER (5 min)
bash# Initialiser Git
git init
git add .
git commit -m "Initial commit - API documents Next.js"

# Cr√©er le repo sur GitHub
# Aller sur https://github.com/new
# Nom : my-muqabala-nextjs
# Cr√©er sans README

# Ajouter l'origine et pousser
git remote add origin https://github.com/User785485/my-muqabala-nextjs.git
git branch -M main
git push -u origin main
√âTAPE 9 : D√âPLOYER SUR VERCEL (5 min)

Aller sur https://vercel.com/new
Importer le projet my-muqabala-nextjs
IMPORTANT : Ajouter les variables d'environnement :

NEXT_PUBLIC_SUPABASE_URL
NEXT_PUBLIC_SUPABASE_ANON_KEY


D√©ployer

√âTAPE 10 : CHANGER LE DOMAINE (5 min)

Dans Vercel Dashboard
Aller dans le nouveau projet my-muqabala-nextjs
Settings ‚Üí Domains
Retirer www.my-muqabala.fr de l'ancien projet
L'ajouter au nouveau projet

üìã CHECKLIST DE V√âRIFICATION

 Nouveau projet cr√©√© avec Next.js
 D√©pendances install√©es
 API documents cr√©√©e dans app/api/documents/[...path]/route.ts
 Variables d'environnement configur√©es
 Test local r√©ussi
 Code pouss√© sur GitHub
 D√©ploy√© sur Vercel
 Variables d'environnement ajout√©es sur Vercel
 Domaine transf√©r√© au nouveau projet

‚è±Ô∏è TEMPS TOTAL ESTIM√â : 30 MINUTES
‚ö†Ô∏è POINTS D'ATTENTION

NE PAS supprimer l'ancien projet tout de suite
V√âRIFIER que l'API fonctionne avant de changer le domaine
TESTER avec une URL apr√®s d√©ploiement

Une fois termin√©, l'URL https://www.my-muqabala.fr/api/documents/... fonctionnera !